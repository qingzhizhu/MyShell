#!/bin/bash
#echo "*** Template Shell Script ***"
#echo "Desc : git hook 客户端提交检查"
#echo "Author : gengkun123@gmail.com"
#echo "*** Run time: $(date) @ $(hostname)"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
#echo "DIR=$DIR"
#echo "当前提交用户:$GIT_AUTHOR_NAME"

#master
USER_MASTER_NUM=0
USER_MASTER=("gengkun" "master" "耿坤" "AA")
USER_MASTER_PATH=(".")

#开发权限
USER_DEV_NUM=1
USER_DEV=("dev" "dev1" "dev2" "dev3")
USER_DEV_PATH=("b" "dev" "art")

#美术权限
USER_ART_NUM=2
USER_ART=("art" "art1" "art2")
USER_ART_PATH=("a" "art")


#declare -A DIC_USER
DIC_USER=([$USER_MASTER_NUM]=${USER_MASTER[*]}, [$USER_DEV_NUM]=${USER_DEV[*]}, [$USER_ART_NUM]=${USER_ART[*]})
DIC_PATH=([$USER_MASTER_NUM]=${USER_MASTER_PATH[*]}, [$USER_DEV_NUM]=${USER_DEV_PATH[*]}, [$USER_ART_NUM]=${USER_ART_PATH[*]})


#echo "----------"

process_revision ()
{
  #echo "----------process_revision start"
  revisions=$(git rev-list $old_revision..$new_revision)
  #echo "revisions=$revisions@@"
  

  changePath=""
  author=""
  for revision in ${revisions[@]}; do
    #echo "revision=$revision"
    message=$(git cat-file commit $revision | sed '1,/^$/d')
    #echo "message=$message"
    if [[ $message =~ "Merge" ]]; then
      echo "这是一个merge提交，不检查，下一条"
    elif [[ $message =~ "Conflicts" ]]; then
      echo "这是一个冲突提交，不检查，下一条"
    fi



    changePath=""
    author=$(git show $revision --pretty=format:'%an' | sed q)
    #echo "记录作者：$author"
    change=$( git show $revision --stat | sed '1,/^$/d' | sed '1,/^$/d; $d' )
    #echo -e "change=$change\n===="

    #一次提交记录检查------
    for i in $change; do
      #判断是否有... 冲突
      if [[ $i =~ "..." ]]; then
        echo "冲突提交，包含...不用检查此提交记录:$i"
        changePath=""
        break
      
      #判断是否重命名操作{ }
      elif [[ $i =~ "{" || $i =~ "}" ]]; then
        echo "重命名提交，包含大括号，不用检查此提交记录:$i"
        changePath=""
        break
      
      
      #判断是否有 / 
      elif [[ $i =~ "/" ]]; then
        #echo "普通提交,包含斜杠:$i"
        #changePath=("${changePath[@]}" "${i%/*}")
        tempPath="${i%/*} "
        if [[ $changePath =~ $tempPath ]]; then
          echo "changePath包含tempPath;@$changePath;$tempPath@"
          continue
        fi
        changePath="${changePath}$tempPath"
        #echo "@@$changePath"
      #是否是个根目录下的文件

      else
        #echo "其他字符：$i"
        :
      fi
    done
    #一次提交记录检查完毕------

    #检查是否在用户的权限文件夹中
    if [[ $changePath == "" ]]; then
      continue
    fi


    
    
   
    #============changepath enable ===========
    TMP_GIT_AUTHOR=$author
    #后缀_art表示都是美术， _dev 都是程序
    
    tmpAuthor=${TMP_GIT_AUTHOR#*_}
    #echo "tmpAuthor=$tmpAuthor"
    if [[  $tmpAuthor == "art" ]]; then
      #echo "美术开发组"
      TMP_GIT_AUTHOR="art"
    elif [[ $tmpAuthor == "dev" ]]; then
      #echo "程序开发组"
      TMP_GIT_AUTHOR="dev"
    fi

    change=$changePath
    needCheck=0
    isGuest=1
    for key in $(echo ${!DIC_USER[*]})
    do
        #echo "$key : ${DIC_USER[$key]}"
        arr=${DIC_USER[$key]}
        if echo "${arr[@]}" | grep -w "$TMP_GIT_AUTHOR" &>/dev/null; then
          isGuest=0
        
        userPath=${DIC_PATH[$key]}
        #echo "userPath=${userPath}"
        #echo -e "检查是否在用户的权限文件夹中:$changePath -> $userPath"
        if [[ "${userPath}" == "." || "${userPath}" == ".,"  || "$userPath[0]" == "." ]]; then
          echo "you are master,这条记录ok，下一条"
          break
        fi
          

          #文件检测是否在允许的路径中
          needCheck=1
          for i in $change; do
            file=$i
            #echo $file
            isEnable=1
            msg=""
            filepath=$i
            for path in $userPath; do
              #只要在其中一个就行
              if [[ $filepath =~ $path  ]]; then
                isEnable=1
                msg=""
                break
              else
                msg="$msg\n$file not in $path"
                isEnable=0
              fi
            done

            if [[ $isEnable == 0 ]]; then
              echo -e "Error!!! don't commit!!! \nYou can Access dir are : ${userPath} $msg"
              exit 1
            fi
            


          done

          
          break;
        else
          :


        fi
            
    done


    #============changepath enable end ========
    # for path in $changePath; do

    # done




  done

  #echo "----------process_revision end"

}

isGuest=1
while read old_revision new_revision refname ; do
  #echo "old_revision=$old_revision"
  #echo "new_revision=$new_revision"
  process_revision
done


#echo "-----------"

if [[ $isGuest == 1 ]]; then
  echo "当前提交用户:$TMP_GIT_AUTHOR"
  echo "Error: you don't have any Access！"
  exit 1
fi

echo "You can push!"

#exit 1
